int test;
int a ;
int b;
a = 5+1;
char b[10] ;
int c[10] ;

int minloc(int a[], int low, int high)
{
  int i; int x; int k;

  k = low;
  x = a [low];
  i = low + 1;
  while (i < high)
  {
    if (a[i] < x)
    {
        x=a[i]; 
        k = i;
    }
    i = i + 1;
  }
  return k;
}

void sort(int a[], int low, int high)
  {
    int i;
    int k;
    i = low;
    while (i < high-1)
    {
      int t;
      k = minloc(a,i,high);
      t = a[k];
      a[k] = a[i];
      a[i] = t;
      i = 4 + (1 + 3) * 51 -2 ;
      i = 4 + 1 + 3 * 51 -2 ;
      i = -(1 * 2) + (3 + 4) - (5 + 6 + 7 + 8);
    }
  }
  
void main()
  {
  int i;
  i = 0;
  while (i < 10)
  {
  	x[i] = input();
  	i = i + 1;
  }
  sort(x, 0, 10);
  i = 0;
  while (i < 10)
  {
    output(x[i]);
    i = i + 1;
  }
}














int a ;
float b;
a = 5+1;
char c[10] ;


















int i;
int j;
int k[2];

/* function A */

int procA(){
    int i;
    int j;
    int k[2];

    write "in procA"; /* do you handle strings? */
    writeln;
    i = 10;
    j = 11;
    k[0] = 1; k[1]=2;
    write "i="; write i; writeln;
    write "j="; write j; writeln;
    write "k="; write k; writeln;
    i = procA2(k);
    j = procA3(k,j);
}

int procA2(int i[2]) {
    int i;

    writeln "in procA2"; writeln;
    i[0] = 120;
    i[1] = 121;
    write "i="; write i; writeln;
    write "i[0]="; write i[0]; writeln;
    write "i[1]="; write i[1]; writeln;
    return i[0];
}

int procA3(int i[2],int j) {
    int i;
    int j;

    writeln "in procA3"; writeln;
    i := 130;
    j := 131;
    k[1] := 132;
    write "i="; write i; writeln;
    write "j="; write j; writeln;
    write "j[0]="; write j[0]; writeln;
    return j;
}

/*    procB    */

int procB(int  k[2]) {
    int i[2];

    writeln "in procB"; writeln;
    i[0] = 20;
    i[1] = 21;
    write "i[0]="; write i[0]; writeln;
    write "j="; write j; writeln;
    write "k[1]="; write k[1]; writeln;
    return i[1];
}

/*    main     */

void main() {
    int n;
    write "in main"; writeln;
    i = 1;
    j = 2;
    k[1] = 3; k[0] = 1;
    write "i="; write i; writeln;
    write "j="; write j; writeln;
    write "k[1]="; write k[1]; writeln;
    if (procA() > procB()) {
        write "A"; write ">"; write "B"; writeln;
    }
    else {
        n = procA() + procB();
        while (n > 0){
            n = n - 1;
        }
    }
    write "E"; write "N"; write "D"; writeln;
}

main();



/*
i = (1 * 2) + (3 + 4) - (5 + 6 + 7 + 8);
---------------------------------------

[t1,t2,t3,t4,]
[t1,t3,t4,t5,t6,t7,t8,t9,t10]
[true tru tru ]

T1 = 1 * 2
T2 = 3 + 4
T1 = T1 + T2

T2 = 5 + 6
T2 = T2 + 7
T2 = T2 + 8
T1 = T1 - T2
i = T1

*/

/*if (4 < 2){
  int x ;
  x = 5;
}
else{
  int x;
  x = 7;
}

IR:
if (4<2) goto <IFBLOCK>
goto <ELSEBLOCK>
<IFBLOCK>
x = 5
goto <ENDELSEBLOCK>
<ELSEBLOCK>
x = 7;
<ENDELSEBLOCK>

while (4<2){
  int x;
  x = 5;
}

<WHILE>
if (4<2) goto <WHILEBLOCK>
goto <ENDWHILEBLOCK>
<WHILEBLOCK>
x = 5
goto <WHILE>
<ENDWHILEBLOCK>
*/



if ($1 is a const) && ($3 is a const){
  temp = $1 op $3
}